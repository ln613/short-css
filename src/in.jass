{
  const util = require(process.cwd() + '/src/util');
  const gray = util.colors.lightgray;

  function boxShadow (n) {
    .bs${n} {
      box-shadow: 0 ${n * 1}px ${n * 2}px 0 rgba(0, 0, 0, 0.2), 0 ${n * 2}px ${n * 5}px 0 rgba(0, 0, 0, 0.19);
    }
  }
}

${'src/ctrl.jass'}

{for (let i = 12; i <= 128; i += 6) {
  .c${i} {
    min-width: 0;
    min-height: 0;
    width: ${i}px;
    height: ${i}px;
    border-radius: 50%;
    padding: 0;
  }
}}

{for (let i = 5; i <= 100; i += 5) {
  .w${i} { width: ${i}%; }
  .h${i} { height: ${i}%; }
}}

{[['1-3', 1/3], ['2-3', 2/3], ['1-6', 1/6], ['5-6', 5/6], ['1-8', 1/8], ['3-8', 3/8], ['5-8', 5/8], ['7-8', 7/8], ['1-12', 1/12], ['5-12', 5/12], ['7-12', 7/12], ['11-12', 11/12]].map(x => {
  .w${x[0]} { width: ${(x[1] * 100).toFixed(2)}%; }
})}

{for (let i = 1; i <= 9; i++) {
  .fw${i} { font-weight: ${i}00; }
}}

{[6, 8, 10, 12, 15, 18, 21, 24, 30, 36, 42, 48, 64, 128].map(x => {
  .fs${x} { font-size: ${x}px; }
})}

{for (let i = 1; i <= 128; i *= 2) {
  .m${i} { margin: ${i}px; }
  .ml${i} { margin-left: ${i}px; }
  .mr${i} { margin-right: ${i}px; }
  .mt${i} { margin-top: ${i}px; }
  .mb${i} { margin-bottom: ${i}px; }
  .mh${i} { margin-left: ${i}px; margin-right: ${i}px; }
  .mv${i} { margin-top: ${i}px; margin-bottom: ${i}px; }
}}

.p0 { padding: 0; }
.ph0 { padding-left: 0; padding-right: 0; }
.pv0 { padding-top: 0; padding-bottom: 0; }
{for (let i = 1; i <= 128; i *= 2) {
  .p${i} { padding: ${i}px; }
  .pl${i} { padding-left: ${i}px; }
  .pr${i} { padding-right: ${i}px; }
  .pt${i} { padding-top: ${i}px; }
  .pb${i} { padding-bottom: ${i}px; }
  .ph${i} { padding-left: ${i}px; padding-right: ${i}px; }
  .pv${i} { padding-top: ${i}px; padding-bottom: ${i}px; }
}}

{for (let i = 1; i <= 16; i++) {
  .br${i} { border-radius: ${i}px; }
}}
.br50 { border-radius: 50%; }

{for (let i = 0; i <= 16; i++) {
  .bw${i} { border-width: ${i}px; }
}}

{
  const cs = util.colors;
  Object.keys(cs).map(x => {
    const y = x[0].toUpperCase() + x.slice(1);
    .${x} { color: ${cs[x]}; }
    .${y} { background-color: ${cs[x]}; }
    .${y}:not(.disabled):hover { background-color: ${util.lighten(cs[x])}; }
    .${y}:not(.disabled):active { background-color: ${util.darken(cs[x])}; }
  })
}

{for (let i = 2; i <= 64; i *= 2) {
  .sp${i} { width: ${i}px; }
  .spv${i} { height: ${i}px; }
}}

{for (let i = 5; i <= 95; i += 5) {
  .op${i} { opacity: .${i}; }
}}

{[1, 2, 4].map(x => {
  boxShadow(x);
})}

${'src/styles.css'}
